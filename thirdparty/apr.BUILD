licenses(["notice"])

package(default_visibility = ["//visibility:public"])

include_files = [
  "include/apr-2/apr_allocator.h",
  "include/apr-2/apr_anylock.h",
  "include/apr-2/apr_atomic.h",
  "include/apr-2/apr_base64.h",
  "include/apr-2/apr_buckets.h",
  "include/apr-2/apr_crypto.h",
  "include/apr-2/apr_cstr.h",
  "include/apr-2/apr_date.h",
  "include/apr-2/apr_dbd.h",
  "include/apr-2/apr_dbm.h",
  "include/apr-2/apr_dso.h",
  "include/apr-2/apr_encode.h",
  "include/apr-2/apr_env.h",
  "include/apr-2/apr_errno.h",
  "include/apr-2/apr_escape.h",
  "include/apr-2/apr_file_info.h",
  "include/apr-2/apr_file_io.h",
  "include/apr-2/apr_fnmatch.h",
  "include/apr-2/apr_general.h",
  "include/apr-2/apr_getopt.h",
  "include/apr-2/apr_global_mutex.h",
  "include/apr-2/apr.h",
  "include/apr-2/apr_hash.h",
  "include/apr-2/apr_hooks.h",
  "include/apr-2/apr_inherit.h",
  "include/apr-2/apr_jose.h",
  "include/apr-2/apr_json.h",
  "include/apr-2/apr_lib.h",
  "include/apr-2/apr_md4.h",
  "include/apr-2/apr_md5.h",
  "include/apr-2/apr_memcache.h",
  "include/apr-2/apr_mmap.h",
  "include/apr-2/apr_network_io.h",
  "include/apr-2/apr_optional.h",
  "include/apr-2/apr_optional_hooks.h",
  "include/apr-2/apr_perms_set.h",
  "include/apr-2/apr_poll.h",
  "include/apr-2/apr_pools.h",
  "include/apr-2/apr_portable.h",
  "include/apr-2/apr_proc_mutex.h",
  "include/apr-2/apr_queue.h",
  "include/apr-2/apr_random.h",
  "include/apr-2/apr_redis.h",
  "include/apr-2/apr_reslist.h",
  "include/apr-2/apr_ring.h",
  "include/apr-2/apr_rmm.h",
  "include/apr-2/apr_sdbm.h",
  "include/apr-2/apr_sha1.h",
  "include/apr-2/apr_shm.h",
  "include/apr-2/apr_signal.h",
  "include/apr-2/apr_siphash.h",
  "include/apr-2/apr_skiplist.h",
  "include/apr-2/apr_strings.h",
  "include/apr-2/apr_strmatch.h",
  "include/apr-2/apr_tables.h",
  "include/apr-2/apr_thread_cond.h",
  "include/apr-2/apr_thread_mutex.h",
  "include/apr-2/apr_thread_pool.h",
  "include/apr-2/apr_thread_proc.h",
  "include/apr-2/apr_thread_rwlock.h",
  "include/apr-2/apr_time.h",
  "include/apr-2/apr_uri.h",
  "include/apr-2/apr_user.h",
  "include/apr-2/apr_uuid.h",
  "include/apr-2/apr_version.h",
  "include/apr-2/apr_want.h",
  "include/apr-2/apr_xlate.h",
  "include/apr-2/apr_xml.h",
  "include/apr-2/apu_errno.h",
  "include/apr-2/apu.h",
  "include/apr-2/apu_version.h",
  "include/apr-2/apu_want.h",
]

lib_files = [
   "lib/libapr-2.a",
]

genrule(
    name = "libapr-srcs",
    outs = include_files + lib_files,
    srcs = [
       "@expat//:libexpat",     
       "@sqlite//:libsqlite",
    ],
    cmd = "\n".join([
        'set -x',
        'export INSTALL_DIR=$$(pwd)/$(@D)',
        'export TMP_DIR=$$(mktemp -d -t libapr.XXXXX)',
        'mkdir -p $$TMP_DIR',
        'cp -R $$(pwd)/external/apr/* $$TMP_DIR',
        'cd $$TMP_DIR',
        './buildconf -v',
        './configure --prefix=$$INSTALL_DIR --with-expat=$$INSTALL_DIR/../expat/ --with-sqlite3=$$INSTALL_DIR/../sqlite --enable-shared=false',
        'make',
        'make install',
        'rm -rf $$TMP_DIR',
    ]),
)

cc_library(
    name = "libapr",
    srcs = lib_files,
    hdrs = include_files,
    includes=["include/apr-2"],
    linkstatic = 1,
)
